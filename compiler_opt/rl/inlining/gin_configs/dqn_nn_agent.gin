import gin.tf.external_configurables
import compiler_opt.rl.constant
import compiler_opt.rl.gin_external_configurables
import compiler_opt.rl.inlining.config
import tf_agents.agents.dqn.dqn_agent
import tf_agents.networks.q_network

include 'compiler_opt/rl/inlining/gin_configs/common.gin'

train_eval.agent_config_type=@agents.DQNAgentConfig
train_eval.num_iterations=100000
train_eval.batch_size=128
train_eval.train_sequence_length=2

inlining.config.get_observation_processing_layer_creator.quantile_file_dir='compiler_opt/rl/inlining/vocab'
inlining.config.get_observation_processing_layer_creator.with_z_score_normalization = False

create_agent.policy_network = @q_network.QNetwork

QNetwork.preprocessing_combiner=@tf.keras.layers.Concatenate()
QNetwork.fc_layer_params=(20, 10)
QNetwork.dropout_layer_params=None
QNetwork.activation_fn=@tf.keras.activations.relu

tf.train.AdamOptimizer.learning_rate = 0.001
tf.train.AdamOptimizer.epsilon = 0.0003125

DqnAgent.optimizer = @tf.train.AdamOptimizer()
DqnAgent.epsilon_greedy = 0.1
DqnAgent.n_step_update = 1
DqnAgent.boltzmann_temperature = None
DqnAgent.emit_log_probability = False
DqnAgent.target_update_tau = 1.0
DqnAgent.target_update_period= 1
DqnAgent.td_errors_loss_fn = None
DqnAgent.gamma = 1.0
DqnAgent.reward_scale_factor = 1.0
DqnAgent.gradient_clipping = None
DqnAgent.debug_summaries = True
DqnAgent.summarize_grads_and_vars = True
